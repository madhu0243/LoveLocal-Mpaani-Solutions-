#include <stdio.h>
#include <stdlib.h>

int* majorityele(int* nums, int numsSize, int* returnSize) {
    int can1 = 0, count1 = 0;
    int can2 = 0, count2 = 0;

    for (int i = 0; i < numsSize; i++) {
        if (nums[i] ==can1) {
            count1++;
        } else if (nums[i] ==can2) {
            count2++;
        } else if (count1 == 0) {
           can1 = nums[i];
            count1 = 1;
        } else if (count2 == 0) {
           can2 = nums[i];
            count2 = 1;
        } else {
            count1--;
            count2--;
        }
    }
    count1 = 0;
    count2 = 0;
    for (int i = 0; i < numsSize; i++) {
        if (nums[i] ==can1) {
            count1++;
        } else if (nums[i] ==can2) {
            count2++;
        }
    }

    *returnSize = 0;
    int* result = (int*)malloc(sizeof(int) * 2);

    if (count1 > numsSize / 3) {
        result[(*returnSize)++] =can1;
    }

    if (count2 > numsSize / 3 &&can1 !=can2) {
        result[(*returnSize)++] =can2;
    }

    return result;
}

int main() {
    int nums1[] = {1};
    int size1 = sizeof(nums1) / sizeof(nums1[0]);
    int r;
    int* res = majorityele(nums1, size1, &r);

    printf("Output 1: [");
    for (int i = 0; i < r; i++) {
        printf("%d", res[i]);
        if (i < r - 1) {
            printf(", ");
        }
    }
    printf("]\n");
    free(res);

    return 0;
}